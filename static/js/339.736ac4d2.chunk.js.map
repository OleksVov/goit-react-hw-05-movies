{"version":3,"file":"static/js/339.736ac4d2.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MovieCard/MovieCard.module.css?a4e5","components/MovieCard/MovieCard.jsx","components/BackLink/BackLink.jsx","webpack://react-homework-template/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx","service/api.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"cardBox\":\"MovieCard_cardBox__MeU3u\",\"infoBox\":\"MovieCard_infoBox__0H2y+\",\"genresList\":\"MovieCard_genresList__5957d\"};","import NoImagePlaceholder from '../../image/NoImagePlaceholder.png';\nimport PropTypes from 'prop-types';\nimport css from \"./MovieCard.module.css\"\n\n\nconst MovieCard = ({movie,genres}) => {\n    const {title, release_date, poster_path, overview, vote_average} = movie;\n\n    return (\n        <div className={css.cardBox}>\n            <img src={(poster_path && `https://image.tmdb.org/t/p/w300${poster_path}`) ||  NoImagePlaceholder} alt={title} />\n            <div className={css.infoBox}>\n            <h2>{title}</h2>\n            <p>Release date: {release_date}</p>\n            <p>Vote average: {vote_average}</p>\n            <h3>Genres:</h3>\n            <ul className={css.genresList}>\n                {genres && genres.map(item => (\n                    <li key={item.id}>\n                        <p>{item.name}</p>\n                    </li>\n                ))}\n\n            </ul>\n            <h3>Overview:</h3>\n            <p>{overview}</p>\n            </div>\n            \n        </div>\n    )\n};\n\nexport default MovieCard;\n\nMovieCard.propTypes = {\n    movie: PropTypes.object.isRequired,\n    genres: PropTypes.array.isRequired,\n}","import { Link } from \"react-router-dom\";\nimport {HiChevronDoubleLeft} from \"react-icons/hi\";\nimport styled from \"@emotion/styled\";\n\n\nconst StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: orange;\n  opacity: 0.7;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: orange;\n    opacity: 1;\n  }\n`;\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to || '/'}>\n      <HiChevronDoubleLeft size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"ItemSubPage\":\"MovieDetails_ItemSubPage__NZvsD\"};","import { Outlet, Link, useParams, useLocation } from \"react-router-dom\";\nimport { useEffect, useState, useRef } from \"react\";\nimport { Suspense } from \"react\";\nimport { fetchMovieById } from \"service/api\";\nimport  MovieCard  from \"components/MovieCard/MovieCard\";\nimport { BackLink } from \"components/BackLink/BackLink\";\nimport { Loader } from \"components/Loader/Loader\";\nimport css from \"./MovieDetails.module.css\"\nimport { NotFound } from \"pages/NotFound\";\n\n\nconst MovieDetails = () => {\n\n    const [movie, setMovie] = useState({});\n    const [genres, setGenres] = useState([]);\n    const {movieId} = useParams();\n    const location = useLocation();\n    // const backLinkHref = location.state?.from ?? {pathname: '/'};\nconst backLinkLocationRef = useRef(location.state?.from ?? '/');\n\n\n    useEffect(() => {\n        try {\n            const getMovie = async() => {\n                const result = await fetchMovieById(movieId);\n               \n                if (result.status === 404) {\n                    console.log(\"Sorry, we couldn't find that page\");;\n                    return;\n                } else {setMovie(result);}\n                \n               \n            }\n            getMovie();\n        } catch (error) {\n            console.log(error);\n        }\n    },[movieId]);\n\n    useEffect(() => {\n        if (!movie.genres) {\n            return\n        }\n        setGenres(movie.genres)\n    }, [movie])\n\n\n    return (\n       <div>\n  {movie.id ? (\n     <div>\n     <BackLink to={backLinkLocationRef.current}>Go back</BackLink>\n     <MovieCard movie= {movie} genres= {genres}/>\n      <h3>Additional information</h3>\n      <ul>\n          <li className={css.ItemSubPage}>\n              <Link to=\"cast\" state={{ from: backLinkLocationRef}}>Cast</Link>\n          </li>\n          <li className={css.ItemSubPage}>\n              <Link to=\"reviews\" state={{ from: backLinkLocationRef}}>Reviews</Link>\n          </li>\n      </ul>\n      <Suspense fallback={<Loader/>}>\n      <Outlet />\n    </Suspense>\n     </div>\n  ) : (\n    <NotFound/>\n  )}\n       </div>\n            \n    );\n}\n\nexport default MovieDetails;","import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '8d83f7efdfaf711afea4c7df39bd5119';\n\n\nexport const fetchTrending = async() => {\nconst response = await axios.get(`/trending/movie/week?api_key=${API_KEY}`);\nreturn response.data.results;\n}\n\nexport const fetchMovieById = async(id) => {\n    const response = await axios.get(`/movie/${id}?api_key=${API_KEY}&language=en-US`);\n    return response.data;\n}\n\nexport const fetchCast = async(id) => {\n    const response = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}&language=en-US`);\n    return response.data.cast;\n}\n\nexport const fetchReviews = async(id) => {\n    const response = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n   \n    return response.data.results;\n}\n\nexport const fetchGenres = async() => {\n    const response = await axios.get(`/genre/movie/list?api_key=${API_KEY}&language=en-US`);\n   \n    return response.data;\n}\n\nexport const searchMovie = async(query) => {\n    const response = await axios.get(`/search/movie?api_key=${API_KEY}&${query}`);\n   console.log(response);\n    return response.data.results;\n\n}"],"names":["movie","genres","title","release_date","poster_path","overview","vote_average","className","css","src","NoImagePlaceholder","alt","map","item","name","id","StyledLink","styled","Link","BackLink","to","children","size","useState","setMovie","setGenres","movieId","useParams","location","useLocation","backLinkLocationRef","useRef","state","from","useEffect","getMovie","fetchMovieById","result","status","console","log","error","current","Suspense","fallback","Loader","NotFound","axios","API_KEY","fetchTrending","response","data","results","fetchCast","cast","fetchReviews","searchMovie","query"],"sourceRoot":""}